# -*- coding: utf-8 -*-
"""Functions_recursions.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/152aZ9vbE88N1n-nBPBERUdSyl1voX7T1

# **Function**
"""

def goodDay(name,ending):
  print("Good Day," + name)
  print(ending)
goodDay("Tam", "Thankyou")
goodDay("Divya", "Thanks")

def avg():
  a = int(input("Enter a number: "))
  b = int(input("Enter a number: "))
  c = int(input("Enter a number: "))
  average=(a+b+c)/3
  print(f"The average of the number is {round(average,2)}")
avg()

def goodDay(name,ending):
  print("Good Day," + name)        #Default Value Parameter
  print(ending)
  return "done"
a = goodDay("Tam","Thankyou")
print(a)

def goodDay(name, ending="Thankyou"):
  print(f"GoodDay, {name}")
  print(ending)
goodDay("Aaryan")

"""# **Recursion**"""

def factorial(n):
  if(n==0 or n==1):
    return 1
  return n*factorial(n-1)
n = int(input("Enter a number: "))
print(factorial(n))                 #this function calls itself

def f_to_c(f):
  return 5*(f-32)/9
n = int(input("Enter a number: "))
c = f_to_c(n)
print(f"{round(c,2)}Â°C")            #c=value, 2=decimal places

print("a")
print("b")
print("c",end="")
print("d",end="")                   #this is exactly how an end argument works

def sum(n):
  if(n==1):
    return 1
  return sum(n-1)+n
print(sum(4))

def pattern(n):
  if(n==0):
    return
  print("*"*n)
  pattern(n-1)
pattern(3)

def inch_to_cm(inch):
  if(inch==0):
    return 0
  return inch_to_cm(inch-1)+2.54
print(f"{round(inch_to_cm(10),2)}")

def rem(l,word):
  n=[]
  for item in l:
    if not(item==word):
      n.append(item.strip(word))

  return n

l = ["Potato","Rice","Curry","Bus"]
print(rem(l,"Bus"))

def multiply(n):
  for i in range(1,11):
    print(f"{n}x{i} = {n*i}")
multiply(5)